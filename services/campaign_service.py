from dataclasses import dataclass, field
from typing import Dict, List, Optional
from datetime import datetime

@dataclass
class CampaignSettings:
    theme: str = ""
    world: str = ""
    characters: List[str] = field(default_factory=list)
    game_structure: str = ""
    additional_elements: List[str] = field(default_factory=list)
    created_at: datetime = field(default_factory=datetime.now)
    updated_at: datetime = field(default_factory=datetime.now)

class CampaignService:
    def __init__(self):
        self.campaigns: Dict[int, CampaignSettings] = {}

    def get_campaign(self, user_id: int) -> CampaignSettings:
        if user_id not in self.campaigns:
            self.campaigns[user_id] = CampaignSettings()
        return self.campaigns[user_id]

    def update_campaign(self, user_id: int, **kwargs) -> CampaignSettings:
        campaign = self.get_campaign(user_id)
        for key, value in kwargs.items():
            if hasattr(campaign, key):
                setattr(campaign, key, value)
        campaign.updated_at = datetime.now()
        return campaign

    def get_formatted_settings(self, user_id: int) -> str:
        campaign = self.get_campaign(user_id)
        if not any([campaign.theme, campaign.world, campaign.characters, 
                   campaign.game_structure, campaign.additional_elements]):
            return "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–µ –∑–∞–¥–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /campaign –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."

        formatted = "üé≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–∏:\n\n"
        
        if campaign.theme:
            formatted += f"üé≠ –¢–µ–º–∞—Ç–∏–∫–∞: {campaign.theme}\n"
        if campaign.world:
            formatted += f"üåç –ú–∏—Ä: {campaign.world}\n"
        if campaign.characters:
            formatted += f"üë• –ü–µ—Ä—Å–æ–Ω–∞–∂–∏:\n" + "\n".join(f"‚Ä¢ {char}" for char in campaign.characters) + "\n"
        if campaign.game_structure:
            formatted += f"‚è∞ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–≥—Ä—ã: {campaign.game_structure}\n"
        if campaign.additional_elements:
            formatted += f"‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:\n" + "\n".join(f"‚Ä¢ {elem}" for elem in campaign.additional_elements)
        
        return formatted 